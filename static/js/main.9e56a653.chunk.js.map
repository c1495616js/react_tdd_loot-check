{"version":3,"sources":["reducers/balance.js","actions/constants.js","components/Wallet.js","actions/balance.js","components/App.js","index.js"],"names":["balance","state","action","type","deposit","withdrawal","Wallet","updateBalance","event","setState","parseInt","target","value","props","withdraw","className","this","onChange","onClick","Component","mapActionToProps","connect","App","store","createStore","rootReducer","render","document","getElementById"],"mappings":"iMAeeA,EAbC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACrC,OAAOA,EAAOC,MACZ,ICJuB,cDKrB,OAAOD,EAAOF,QAChB,ICLmB,UDMjB,OAAOC,EAAQC,EAAOE,QACxB,ICNoB,WDOhB,OAAOH,EAAQC,EAAOG,WAC1B,QACE,OAAOJ,I,oCERAK,EAAb,2MACEL,MAAQ,CACND,QAAS,GAFb,EAKEO,cAAgB,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAET,QAASU,SAASF,EAAMG,OAAOC,MAAO,OALjF,EAOER,QAAU,kBAAM,EAAKS,MAAMT,QAAQ,EAAKH,MAAMD,UAPhD,EASEc,SAAW,kBAAM,EAAKD,MAAMC,SAAS,EAAKb,MAAMD,UATlD,wEAYI,OACE,6BACE,wBAAIe,UAAU,WAAd,mBAAyCC,KAAKH,MAAMb,SACpD,6BACA,2BACEe,UAAU,eACVE,SAAUD,KAAKT,gBAEjB,4BACEQ,UAAU,cACVG,QAASF,KAAKZ,SAFhB,WAMA,4BACEW,UAAU,eACVG,QAASF,KAAKF,UAFhB,iBA1BR,GAA4BK,aAsCtBC,EAAmB,CACvBhB,QCjCqB,SAAAA,GACrB,MAAO,CACLD,KFVmB,UEWnBC,YD+BFU,SC3BsB,SAAAT,GACtB,MAAO,CACLF,KFhBoB,WEiBpBE,gBD0BWgB,cALS,SAAApB,GAAK,MAAK,CAAED,QAASC,IAKLmB,EAAzBC,CAA2Cf,GE3CrCgB,E,iLAEjB,OACE,6BACE,0CACA,6BACA,kBAAC,EAAD,W,GANyBH,aCM3BI,EAAQC,YAAYC,GAE1BC,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.9e56a653.chunk.js","sourcesContent":["import * as constants from '../actions/constants';\n\nconst balance = (state = 0, action) => {\n  switch(action.type) {\n    case constants.SET_BALANCE:\n      return action.balance;\n    case constants.DEPOSIT:\n      return state + action.deposit;\n    case constants.WITHDRAW:\n        return state - action.withdrawal;\n    default:\n      return state;\n  }\n}\n\nexport default balance;","export const SET_BALANCE = 'SET_BALANCE';\nexport const DEPOSIT = 'DEPOSIT';\nexport const WITHDRAW = 'WITHDRAW';\nexport const FETCH_BITCOIN = 'FETCH_BITCOIN';","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { deposit, withdraw } from '../actions/balance';\nexport class Wallet extends Component {\n  state = {\n    balance: 0,\n  }\n\n  updateBalance = event => this.setState({ balance: parseInt(event.target.value, 10) });\n\n  deposit = () => this.props.deposit(this.state.balance);\n\n  withdraw = () => this.props.withdraw(this.state.balance);\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"balance\">Wallet balance: {this.props.balance}</h3>\n        <br />\n        <input \n          className=\"input-wallet\"\n          onChange={this.updateBalance}\n        />\n        <button \n          className=\"btn-deposit\"\n          onClick={this.deposit}\n        >\n          Deposit\n        </button>\n        <button \n          className=\"btn-withdraw\"\n          onClick={this.withdraw}\n        >\n          Withdraw\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({ balance: state });\nconst mapActionToProps = {\n  deposit,\n  withdraw,\n};\nexport default connect(mapStateToProps, mapActionToProps)(Wallet);\n","import * as constants from './constants';\n\nexport const setBalance = balance => {\n  return {\n    type: constants.SET_BALANCE,\n    balance,\n  }\n}\n\nexport const deposit = deposit => {\n  return {\n    type: constants.DEPOSIT,\n    deposit,\n  }\n}\n\nexport const withdraw = withdrawal => {\n  return {\n    type: constants.WITHDRAW,\n    withdrawal,\n  }\n}","import React, { Component } from 'react'\nimport Wallet from './Wallet';\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Loot Check</h2>\n        <hr />\n        <Wallet />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './reducers/balance';\nimport App from './components/App';\n\nconst store = createStore(rootReducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);"],"sourceRoot":""}